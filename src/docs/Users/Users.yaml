paths:
  /api/users:
    get:
      tags:
        - Usuarios
      summary: Obtenemos los usuarios
      responses:
        "200":
          description: Lista de usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor  
    post:
      tags:
        - Usuarios
      requestBody:
          required: Crear un nuevo usuario
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/createUser'
      responses:
        "201":
          description: Usuario creado correctamente         
        "400":
          description: Error en la solicitud
        "500":
          description: Error interno del servidor          
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: objectId
          description: ID del usuario generado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        password:
          type: string
          description: Contraseña del usuario  
      example: 
        id: 1234567890abcdef12345678
        first_name: "Emiliano"
        last_name: "Pereiro"
        password: "123456"     
  requestBodies:
    createUser:
      type: object
      properties:       
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        password:
          type: string
          description: Contraseña del usuario  
        email:
          type: string
          description: Correo electrónico del usuario
      example: 
        first_name: "Emi"
        last_name: "Pere"
        password: "123456"
        email: "emi@pere.com"    